name: retrigger-builds-on-merges

on:
  push:
    branches:
      - "**"

jobs:
  retrigger-pull-requests:
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Get the name of the branches of each opened PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/github-script@v6
        with:
          script: |
            const GITHUB_TOKEN = process.env.GITHUB_TOKEN;
            const repository = process.env.GITHUB_REPOSITORY;
            const pullsUrl = `https://api.github.com/repos/${repository}/pulls?state=open&base=main`;

            // fetch opened PRs
            (async () => {
              const pr_response = await fetch(pullsUrl, {
                headers: {
                  Authorization: `Bearer ${GITHUB_TOKEN}`,
                  Accept: 'application/vnd.github+json',
                },
              });

              if (!pr_response.ok) {
                throw new Error(`Failed to fetch PRs: ${pr_response.status} ${pr_response.statusText}`);
              }

              const prs = await pr_response.json();

              //console.log('API Response Data:', pr_response_data);
              //console.log('Pulls URL:', pullsUrl);

              prs.forEach(pr => console.log(pr));
              core.setOutput("send_var", "test!!!!");
            })();

      - name: Get the last valid work flow for each branches
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/github-script@v6
        with:
          script: |
            const myVarFromStep1 = "${{ steps.step1.outputs.send_var }}";
            console.log("Received variable from Step 1:", myVarFromStep1);

            
